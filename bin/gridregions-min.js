!function(t){function e(i){if(n[i])return n[i].exports;var o=n[i]={exports:{},id:i,loaded:!1};return t[i].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p="",e(0)}([function(t,e,n){var i=n(1),o=(i.PriorityQueue,0),r=1,s=2,a=3,l={1:a,3:r,2:o,0:s},h=6,c=0,u=function(t,e){function n(t,e,n,i,o){if(!M(i,o))return!1;var r,s=N(t);return s.findPath(e,n,i,o,function(t){r=t?!0:!1}),s.calculate(),r}function c(t,e,n){for(var i=N(t),o=new g(-1,e,n,e-Math.floor(e/X)*X,n-Math.floor(n/X)*X),r=0;r<t.nodes.length;r++)i.findPath(o.localX,o.localY,t.nodes[r].localX,t.nodes[r].localY,function(e){e&&o.edges.push({cost:e.length,neighbor:t.nodes[r]})}),i.calculate();return o}function u(e,n){return 0>e||e>=t||0>e||e>=t?!1:!0}function p(t,e){var n=0,i=0;switch(e){case r:n=1;break;case s:i=1;break;case a:n=-1;break;case o:i=-1}var l=Y(t.x*X+n*X,t.y*X+i*X);return l}function x(t,e){for(var n=[],i=0;i<t.nodes.length;i++)t.nodes[i].side===e&&(n.push(t.nodes[i]),t.nodes.splice(i,1),i--);for(var i=0;i<n.length;i++)for(var o=n[i],r=0;r<o.edges.length;r++){var s=o.edges[r].neighbor;b(s,o)}}function b(t,e){for(var n=0;n<t.edges.length;n++)t.edges[n].neighbor===e&&(t.edges.splice(n,1),n--)}function w(e){if(e.y>0){var n=p(e,o);x(n,s),x(e,o)}if(e.x<t/X-1){var n=p(e,r);x(n,a),x(e,r)}if(e.y<t/X-1){var n=p(e,s);x(n,o),x(e,s)}if(e.x>0){var n=p(e,a);x(n,r),x(e,a)}if(e.y>0){var n=p(e,o);m(e,o),P(n,s)}if(e.x<t/X-1){var n=p(e,r);m(e,r),P(n,a)}if(e.y<t/X-1){var n=p(e,s);m(e,s),P(n,o)}if(e.x>0){var n=p(e,a);m(e,a),P(n,r)}}function P(t,e){for(var n=N(t),i=0;i<t.nodes.length;i++){var o=t.nodes[i];if(o.side===e)for(var r=0;r<t.nodes.length;r++)o!==t.nodes[r]&&(n.findPath(o.localX,o.localY,t.nodes[r].localX,t.nodes[r].localY,function(n){n&&(o.edges.push({cost:n.length,neighbor:t.nodes[r]}),t.nodes[r].side!==e&&t.nodes[r].edges.push({cost:n.length,neighbor:o}))}),n.calculate())}}function E(t){for(var e=N(t),n=0;n<t.nodes.length;n++)for(var i=t.nodes[n],o=0;o<t.nodes.length;o++)i!==t.nodes[o]&&(e.findPath(i.localX,i.localY,t.nodes[o].localX,t.nodes[o].localY,function(e){e&&i.edges.push({cost:e.length,neighbor:t.nodes[o]})}),e.calculate())}function m(t,e){function n(n){if(n.size<h){var o=(n.start+Math.floor(n.size/2))*Math.abs(c),r=(n.start+Math.floor(n.size/2))*Math.abs(i),s=new g(e,f+o,v+r,f%X+o,v%X+r),a=new g(l[e],f+o+b,v+r+w,(f+o+b)%X,(v+r+w)%X);if(a.localY<0)throw new Error(v);s.edges.push({cost:1,neighbor:a}),a.edges.push({cost:1,neighbor:s}),t.nodes.push(s),d.nodes.push(a)}else{var u=n.start*Math.abs(c),y=n.start*Math.abs(i),p=(n.start+(n.size-1))*Math.abs(c),x=(n.start+(n.size-1))*Math.abs(i),P=new g(e,f+u,v+y,f%X+u,v%X+y),E=new g(l[e],f+u+b,v+y+w,(f+u+b)%X,(v+y+w)%X);P.edges.push({cost:1,neighbor:E}),E.edges.push({cost:1,neighbor:P});var m=new g(e,f+p,v+x,f%X+p,v%X+x),M=new g(l[e],f+p+b,v+x+w,(f+p+b)%X,(v+x+w)%X);m.edges.push({cost:1,neighbor:M}),M.edges.push({cost:1,neighbor:m}),t.nodes.push(P,m),d.nodes.push(E,M)}}var i=0,c=0;switch(e){case r:i=1;break;case s:c=1;break;case a:i=-1;break;case o:c=-1}for(var u,d=Y(t.x*X+i*X,t.y*X+c*X),f=t.x*X+(X-1+(X-1)*i)/2*Math.abs(i),v=t.y*X+(X-1+(X-1)*c)/2*Math.abs(c),y=0;X>y;y++){var p=y*Math.abs(c),x=y*Math.abs(i),b=i,w=c;M(f+p,v+x)&&M(f+p+b,v+x+w)?u?u.size++:u={start:y,size:1}:u&&(n(u),u=void 0)}u&&n(u),E(t)}function M(t,e){var n=Y(t,e);if(1===n.collisionGrid[e-Math.floor(e/X)*X][t-Math.floor(t/X)*X])return!1;for(var i=0;i<n.entities.length;i++)if(n.entities[i].x===t&&n.entities[i].y===e&&n.entities[i].collidable)return!1;return!0}function A(t){for(var e=0;e<t.length-2;e++)for(var n=t[e],i=e+2;i<t.length;i++){var o=t[i],r=[],s=!1;if(n.x===o.x)for(var a=1;a<Math.abs(n.y-o.y)+1;a++){var l;if(l=n.y>o.y?-1*a:1*a,t[e+a].y===n.y+l&&t[e+a].x===n.x||!M(n.x,n.y+l)){s=!1;break}r.push({x:n.x,y:n.y+l}),s=!0}else if(n.y===o.y)for(var a=0;a<Math.abs(n.x-o.x);a++){var l;if(l=n.x>o.x?-1*a:1*a,t[e+a].x===n.x+l&&t[e+a].y===n.y||!M(n.x+l,n.y)){s=!1;break}r.push({x:n.x+l,y:n.y}),s=!0}if(s){var n=t.slice(0,e+1),o=t.slice(i),h=n.concat(r).concat(o);return A(h)}}return t}function N(t){var n=new i.js;n.enableSync(),n.setGrid(t.collisionGrid);for(var o=0;o<t.entities.length;o++)t.entities[o].collidable&&n.avoidAdditionalPoint(t.entities[o].localX,t.entities[o].localY);return n.setAcceptableTiles([0]),e.diagonals&&n.enableDiagonals(),n}function Y(t,e){return S[e][t]}var X=10,S=[],C={};if(t%X!==0)throw new Error("Grid size must be divisible by "+X);e=e||{};for(var T=0;t/X>T;T++){for(var _=0;X>_;_++)S.push([]);for(var D=0;t/X>D;D++)for(var F=new v(D,T),G=0;X>G;G++){F.collisionGrid.push([]);for(var H=0;X>H;H++)F.collisionGrid[G].push(0),S[T*X+G].push(F)}}for(var T=0;t/X>T;T++)for(var D=0;t/X>D;D++)t/X-1>D&&m(S[T*X][D*X],r),t/X-1>T&&m(S[T*X][D*X],s);this.addEntity=function(t,e,n,i){var o=Y(n,i),r=n-o.x*X,s=i-o.y*X,t=new f(t,n,i,r,s,e.collidable);return o.addEntity(t),C[t.id]=t,e.collidable&&w(o),t.id},this.moveEntity=function(t,e,n){if(!u(e,n))throw new Error("Can't move entity. newX and newY are out of bounds.");var i=C[t];if(!i)throw new Error("Can't move entity. No entity by id "+t);i.x=e,i.y=n,i.localX=e%X,i.localY=n%X;var o=Y(i.x,i.y),r=Y(e,n);o!==r&&(o.removeEntity(i),r.addEntity(i)),i.collidable&&(w(o),o!==r&&w(r))},this.removeEntity=function(t){var e=C[t];if(!e)throw new Error("Can't remove entity. No entity by id "+t);var n=Y(e.x,e.y);n.removeEntity(e),e.collidable&&w(n),delete C[t]},this.getNearbyEntity=function(t,e,i){if(!u(t,e))throw new Error("Can't get nearby entity. x and y are out of bounds.");for(var o=Y(t,e),r=c(o,t,e),s=new y(r,void 0),a=[s],l={};a.length>0;){for(var h=a.pop(),d=Y(h.node.x,h.node.y),f=0;f<d.entities.length;f++)if(d.entities[f].doesMatchQuery(i)&&n(d,h.node.localX,h.node.localY,d.entities[f].localX,d.entities[f].localY)){var v=d.entities[f];return{x:v.x,y:v.y,id:v.id,data:v.data}}for(var f=0;f<h.node.edges.length;f++){var g=h.node.edges[f].neighbor;if(!l[g.id]){var s=new y(g,h);a.push(s),l[g.id]=g}}}},this.setImpassableTile=function(t,e){if(!u(t,e))throw new Error("Can't set impassable tile. x and y are out of bounds.");var n=Y(t,e),i=t%X,o=e%X;n.collisionGrid[o][i]=1,w(n)},this.unsetImpassableTile=function(t,e){if(!u(t,e))throw new Error("Can't unset impassable tile. x and y are out of bounds.");var n=Y(t,e),i=t%X,o=e%X;n.collisionGrid[o][i]=0,w(n)},this.getFullPath=function(t,n,o,r,s){if(!u(t,n)||!u(o,r))throw new Error("Can't get full path. start x or y are out of bounds.");void 0===s&&(s=!0);var a=this.getAbstractPath(t,n,o,r);if(a){var l=new i.js;l.enableSync(),l.setAcceptableTiles([0]),e.diagonals&&l.enableDiagonals();for(var h=[],c=0;c<a.length-1;c++){var d=a[c],f=a[c+1],v=Y(d.x,d.y),y=Y(f.x,f.y);if(v===y){l.setGrid(v.collisionGrid);for(var g=0;g<v.entities.length;g++)v.entities[g].collidable&&l.avoidAdditionalPoint(v.entities[g].localX,v.entities[g].localY);l.findPath(d.x%X,d.y%X,f.x%X,f.y%X,function(t){if(!t)throw new Error("An unexpected error has occurred with gamegamegrid.js. Please report this issue to github.com/prettymuchbryce/gamegridjs");for(var e=0;e<t.length;e++)t[e].x=t[e].x+v.x*X,t[e].y=t[e].y+v.y*X;h=h.concat(t)}),l.calculate()}else h.push({x:d.x,y:d.y})}return s&&(h=A(h)),h}},this.getAbstractPath=function(t,e,o,r){if(!u(t,e)||!u(o,r))throw new Error("Can't get abstract path. start x or y are out of bounds.");var s=Y(t,e),a=Y(o,r);if(M(o,r)){var l=o-Math.floor(o/X)*X,h=r-Math.floor(r/X)*X,f=[],v=c(s,t,e),g=c(a,o,r),p=new y(v,void 0,o,r,0,d(t,e,o,r)),f=new i.PriorityQueue("bestGuessDistance",i.PriorityQueue.MIN_HEAP);f.insert(p);for(var x={};f.length>0;){var b=f.shiftHighestPriorityElement(),w=Y(b.node.x,b.node.y);if(w===a&&n(w,b.node.localX,b.node.localY,l,h)){for(var P=[],E=b;E.parent;)P.push(E.node),E=E.parent;return P.push(E.node),P.reverse(),P.push(g),P}for(var m=0;m<b.node.edges.length;m++){var A=b.node.edges[m].neighbor,N=b.node.edges[m].cost;if(x[A.id])A.costSoFar+N<x[A.id].costSoFar&&(x[A.id].costSoFar=A.costSoFar+N,x[A.id].parent=A);else{var p=new y(A,b,o,r,b.costSoFar+N,d(A.x,A.y,o,r));f.insert(p),x[A.id]=A}}}}}},d=function(t,e,n,i){return Math.sqrt((n-=t)*n+(i-=e)*i)},f=function(t,e,n,i,o,r){this.data=t,this.x=e,this.localX=i,this.y=n,this.localY=o,this.collidable=r,this.id=c,c++,this.doesMatchQuery=function(t){for(var e in t){var n=t[e];if(this.data[e]!==n)return!1}return!0}},v=function(t,e){this.x=t,this.y=e,this.entities=[],this.nodes=[],this.collisionGrid=[],this.addEntity=function(t){this.entities.push(t)},this.removeEntity=function(t){for(var e=0;e<this.entities.length;e++)if(this.entities[e]===t)return void this.entities.splice(e,1)}},y=function(t,e,n,i,o,r){this.endX=n,this.endY=i,this.parent=e,this.node=t,this.costSoFar=o,this.simpleDistanceToTarget=r,this.bestGuessDistance=function(){return this.costSoFar+this.simpleDistanceToTarget}},g=function(t,e,n,i,o){this.side=t,this.id=c,c++,this.x=e,this.y=n,this.localX=i,this.localY=o,this.edges=[]};t.exports=u},function(t,e,n){var i,o,r=r||{};i=[],o=function(){return r}.apply(e,i),!(void 0!==o&&(t.exports=o)),"undefined"!=typeof t&&t.exports&&(t.exports=r),r.Node=function(t,e,n,i,o){this.parent=t,this.x=e,this.y=n,this.costSoFar=i,this.simpleDistanceToTarget=o,this.bestGuessDistance=function(){return this.costSoFar+this.simpleDistanceToTarget}},r.Node.OPEN_LIST=0,r.Node.CLOSED_LIST=1,r.PriorityQueue=function(t,e){this.length=0;var n=[],i=!1;if(e==r.PriorityQueue.MAX_HEAP)i=!0;else{if(e!=r.PriorityQueue.MIN_HEAP)throw e+" not supported.";i=!1}this.insert=function(e){if(!e.hasOwnProperty(t))throw"Cannot insert "+e+" because it does not have a property by the name of "+t+".";n.push(e),this.length++,o(this.length-1)},this.getHighestPriorityElement=function(){return n[0]},this.shiftHighestPriorityElement=function(){if(0===this.length)throw"There are no more elements in your priority queue.";if(1===this.length){var t=n[0];return n=[],this.length=0,t}var e=n[0],i=n.pop();return this.length--,n[0]=i,s(0),e};var o=function(t){if(0!==t){var e=h(t);l(t,e)&&(a(t,e),o(e))}},s=function(t){var e=c(t),n=u(t);if(l(e,t))a(t,e),s(e);else if(l(n,t))a(t,n),s(n);else{if(0==t)return;s(0)}},a=function(t,e){var i=n[t];n[t]=n[e],n[e]=i},l=function(e,o){if(void 0===n[o]||void 0===n[e])return!1;var r,s;return"function"==typeof n[e][t]?(r=n[e][t](),s=n[o][t]()):(r=n[e][t],s=n[o][t]),i?r>s?!0:!1:s>r?!0:!1},h=function(t){return Math.floor((t-1)/2)},c=function(t){return 2*t+1},u=function(t){return 2*t+2}},r.PriorityQueue.MAX_HEAP=0,r.PriorityQueue.MIN_HEAP=1,r.instance=function(){this.isDoneCalculating=!0,this.pointsToAvoid={},this.startX,this.callback,this.startY,this.endX,this.endY,this.nodeHash={},this.openList},r.js=function(){var t,e,n,i=1,o=1.4,s=!1,a={},l={},h={},c=!0,u=[],d=Number.MAX_VALUE,f=!1;this.setAcceptableTiles=function(t){t instanceof Array?n=t:!isNaN(parseFloat(t))&&isFinite(t)&&(n=[t])},this.enableSync=function(){s=!0},this.disableSync=function(){s=!1},this.enableDiagonals=function(){f=!0},this.disableDiagonals=function(){f=!1},this.setGrid=function(e){t=e;for(var n=0;n<t.length;n++)for(var i=0;i<t[0].length;i++)l[t[n][i]]||(l[t[n][i]]=1)},this.setTileCost=function(t,e){l[t]=e},this.setAdditionalPointCost=function(t,e,n){h[t+"_"+e]=n},this.removeAdditionalPointCost=function(t,e){delete h[t+"_"+e]},this.removeAllAdditionalPointCosts=function(){h={}},this.setIterationsPerCalculation=function(t){d=t},this.avoidAdditionalPoint=function(t,e){a[t+"_"+e]=1},this.stopAvoidingAdditionalPoint=function(t,e){delete a[t+"_"+e]},this.enableCornerCutting=function(){c=!0},this.disableCornerCutting=function(){c=!1},this.stopAvoidingAllAdditionalPoints=function(){a={}},this.findPath=function(e,o,a,l,h){var c=function(t){s?h(t):setTimeout(function(){h(t)})};if(void 0===n)throw new Error("You can't set a path without first calling setAcceptableTiles() on EasyStar.");if(void 0===t)throw new Error("You can't set a path without first calling setGrid() on EasyStar.");if(0>e||0>o||0>a||0>a||e>t[0].length-1||o>t.length-1||a>t[0].length-1||l>t.length-1)throw new Error("Your start or end point is outside the scope of your grid.");if(e===a&&o===l)return void c([]);for(var d=t[l][a],f=!1,v=0;v<n.length;v++)if(d===n[v]){f=!0;break}if(f===!1)return void c(null);var y=new r.instance;y.openList=new r.PriorityQueue("bestGuessDistance",r.PriorityQueue.MIN_HEAP),y.isDoneCalculating=!1,y.nodeHash={},y.startX=e,y.startY=o,y.endX=a,y.endY=l,y.callback=c,y.openList.insert(p(y,y.startX,y.startY,null,i)),u.push(y)},this.calculate=function(){if(0!==u.length&&void 0!==t&&void 0!==n)for(e=0;d>e;e++){if(0===u.length)return;if(s&&(e=0),0!==u[0].openList.length){var a=u[0].openList.shiftHighestPriorityElement(),l=[];a.list=r.Node.CLOSED_LIST,a.y>0&&l.push({instance:u[0],searchNode:a,x:0,y:-1,cost:i*g(a.x,a.y-1)}),a.x<t[0].length-1&&l.push({instance:u[0],searchNode:a,x:1,y:0,cost:i*g(a.x+1,a.y)}),a.y<t.length-1&&l.push({instance:u[0],searchNode:a,x:0,y:1,cost:i*g(a.x,a.y+1)}),a.x>0&&l.push({instance:u[0],searchNode:a,x:-1,y:0,cost:i*g(a.x-1,a.y)}),f&&(a.x>0&&a.y>0&&(c||y(t,n,a.x,a.y-1)&&y(t,n,a.x-1,a.y))&&l.push({instance:u[0],searchNode:a,x:-1,y:-1,cost:o*g(a.x-1,a.y-1)}),a.x<t[0].length-1&&a.y<t.length-1&&(c||y(t,n,a.x,a.y+1)&&y(t,n,a.x+1,a.y))&&l.push({instance:u[0],searchNode:a,x:1,y:1,cost:o*g(a.x+1,a.y+1)}),a.x<t[0].length-1&&a.y>0&&(c||y(t,n,a.x,a.y-1)&&y(t,n,a.x+1,a.y))&&l.push({instance:u[0],searchNode:a,x:1,y:-1,cost:o*g(a.x+1,a.y-1)}),a.x>0&&a.y<t.length-1&&(c||y(t,n,a.x,a.y+1)&&y(t,n,a.x-1,a.y))&&l.push({instance:u[0],searchNode:a,x:-1,y:1,cost:o*g(a.x-1,a.y+1)})),l.sort(function(t,e){var n=t.cost+x(a.x+t.x,a.y+t.y,u[0].endX,u[0].endY),i=e.cost+x(a.x+e.x,a.y+e.y,u[0].endX,u[0].endY);return i>n?-1:n===i?0:1});for(var h=!1,p=0;p<l.length;p++)if(v(l[p].instance,l[p].searchNode,l[p].x,l[p].y,l[p].cost),l[p].instance.isDoneCalculating===!0){h=!0;break}h&&u.shift()}else{var b=u[0];b.callback(null),u.shift()}}};var v=function(e,i,o,s,l){var h=i.x+o,c=i.y+s;if(void 0===a[h+"_"+c]){if(e.endX===h&&e.endY===c){e.isDoneCalculating=!0;var u=[],d=0;u[d]={x:h,y:c},d++,u[d]={x:i.x,y:i.y},d++;for(var f=i.parent;null!=f;)u[d]={x:f.x,y:f.y},d++,f=f.parent;u.reverse();var v=e,g=u;return void v.callback(g)}if(y(t,n,h,c)){var x=p(e,h,c,i,l);void 0===x.list?(x.list=r.Node.OPEN_LIST,e.openList.insert(x)):x.list===r.Node.OPEN_LIST&&i.costSoFar+l<x.costSoFar&&(x.costSoFar=i.costSoFar+l,x.parent=i)}}},y=function(t,e,n,i){for(var o=0;o<e.length;o++)if(t[i][n]===e[o])return!0;return!1},g=function(e,n){return h[e+"_"+n]||l[t[n][e]]},p=function(t,e,n,i,o){if(void 0!==t.nodeHash[e+"_"+n])return t.nodeHash[e+"_"+n];var s=x(e,n,t.endX,t.endY);if(null!==i)var a=i.costSoFar+o;else a=s;var l=new r.Node(i,e,n,a,s);return t.nodeHash[e+"_"+n]=l,l},x=function(t,e,n,i){return Math.sqrt((n-=t)*n+(i-=e)*i)}}}]);